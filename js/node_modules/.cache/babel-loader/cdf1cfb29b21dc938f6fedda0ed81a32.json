{"ast":null,"code":"var _jsxFileName = \"/Users/adam/dev/warhammer/js/src/Profiles.js\";\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nconst attributes = [{\n  'desc': \"Name\",\n  'type': 'text',\n  key: \"Name\",\n  hideKey: true\n}, {\n  'desc': \"Move\",\n  'type': 'number',\n  key: \"M\"\n}, {\n  'desc': \"Weapon Skill\",\n  'type': 'number',\n  key: \"WS\"\n}, {\n  'desc': \"Balistic Skill\",\n  'type': 'number',\n  key: \"BS\"\n}, {\n  'desc': \"Strength\",\n  'type': 'number',\n  key: \"S\"\n}, {\n  'desc': \"Toughness\",\n  'type': 'number',\n  key: \"T\"\n}, {\n  'desc': \"Wounds\",\n  'type': 'number',\n  key: \"W\"\n}, {\n  'desc': \"Attacks\",\n  'type': 'number',\n  key: \"A\"\n}, {\n  'desc': \"Leadership\",\n  'type': 'number',\n  key: \"Ld\"\n}, {\n  'desc': \"Save\",\n  'type': 'number',\n  key: \"Sv\"\n}];\n\nfunction Roster(props) {\n  const getInputID = a => 'input-id-' + a.key;\n\n  const addProfile = event => {\n    const els = event.target.elements;\n    const vals = attributes.reduce((acc, a) => {\n      return { ...acc,\n        [a.key]: els[getInputID(a)].value\n      };\n    }, {\n      id: uuidv4()\n    }); // eslint-disable-next-line\n\n    const hasMissing = Object.values(vals).some(v => v == \"\");\n    console.log(Object.values(vals), hasMissing);\n\n    if (!hasMissing) {\n      props.setProfiles(props.profiles.concat(vals));\n      event.target.reset();\n    }\n\n    event.preventDefault();\n    return false;\n  };\n\n  const headers = attributes.map(a => /*#__PURE__*/React.createElement(\"th\", {\n    key: a.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, a.hideKey ? a.desc : a.key));\n  const formContent = attributes.map(a => {\n    const id = getInputID(a);\n    const labelStr = a.hideKey ? a.desc : a.desc + \" (\" + a.key + \")\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pure-control-group\",\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, labelStr), /*#__PURE__*/React.createElement(\"input\", {\n      type: a.type,\n      id: id,\n      name: id,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }));\n  }); //const removeProfile = id => props.setProfiles(props.profiles.filter(p => p.id == id))\n\n  const removeProfile = id => console.log(\"JJJJ\", props.profiles.filter(p => p.id !== id));\n\n  const profileRows = props.profiles.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n    key: p.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, attributes.map(a => /*#__PURE__*/React.createElement(\"td\", {\n    key: p.id + a.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, p[a.key])), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"x\",\n    onClick: removeProfile(p.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"\\u274E\")))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, headers, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 30\n    }\n  }, \"Remove\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, profileRows)), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Add Profile:\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"pure-form pure-form-aligned\",\n    onSubmit: addProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, formContent, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"pure-button pure-button-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Add Profile\")));\n}\n\nexport default Roster;","map":{"version":3,"sources":["/Users/adam/dev/warhammer/js/src/Profiles.js"],"names":["React","v4","uuidv4","attributes","key","hideKey","Roster","props","getInputID","a","addProfile","event","els","target","elements","vals","reduce","acc","value","id","hasMissing","Object","values","some","v","console","log","setProfiles","profiles","concat","reset","preventDefault","headers","map","desc","formContent","labelStr","type","removeProfile","filter","p","profileRows"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst attributes = [\n    {'desc': \"Name\", 'type': 'text', key:\"Name\", hideKey:true, },\n    {'desc': \"Move\", 'type': 'number', key:\"M\"},\n    {'desc': \"Weapon Skill\", 'type': 'number', key:\"WS\"},\n    {'desc': \"Balistic Skill\", 'type': 'number', key:\"BS\"},\n    {'desc': \"Strength\", 'type': 'number', key:\"S\"},\n    {'desc': \"Toughness\", 'type': 'number', key:\"T\"},\n    {'desc': \"Wounds\", 'type': 'number', key:\"W\"},\n    {'desc': \"Attacks\", 'type': 'number', key:\"A\"},\n    {'desc': \"Leadership\", 'type': 'number', key:\"Ld\"},\n    {'desc': \"Save\", 'type': 'number', key:\"Sv\"},\n];\n\n\nfunction Roster(props) {\n    const getInputID= a => 'input-id-' + a.key;\n    const addProfile = (event) => {\n        const els = event.target.elements\n        const vals = attributes.reduce((acc, a) => {\n            return { ...acc, [a.key]: els[getInputID(a)].value};\n        }, {id: uuidv4()})\n\n        // eslint-disable-next-line\n        const hasMissing = Object.values(vals).some(v => v == \"\");\n        console.log(Object.values(vals), hasMissing)\n\n        if (!hasMissing) {\n            props.setProfiles(props.profiles.concat(vals));\n            event.target.reset();\n        }\n        event.preventDefault();\n        return false;\n    }\n    const headers = attributes.map( a => \n        <th key={a.key}>{a.hideKey ? a.desc : a.key}</th>);\n    const formContent = attributes.map( a => {\n        const id = getInputID(a);\n        const labelStr = a.hideKey ? a.desc : a.desc + \" (\"+a.key+\")\";\n        return (\n            <div className=\"pure-control-group\" key={id}>\n                <label htmlFor={id}>{labelStr}</label>\n                <input type={a.type} id={id} name={id} autoComplete=\"off\"/>\n            </div>\n        );\n    })\n    //const removeProfile = id => props.setProfiles(props.profiles.filter(p => p.id == id))\n    const removeProfile = id => console.log(\"JJJJ\", props.profiles.filter(p => p.id !== id))\n    const profileRows = props.profiles.map(p => (\n        <tr key={p.id}>{\n            attributes.map(a =>\n            <td key={p.id+a.key}>{p[a.key]}</td>)\n        }<td><button type=\"button\">\n            <span role=\"img\" aria-label=\"x\" onClick={removeProfile(p.id)}>❎</span>\n        </button></td></tr>));\n    return (\n        <div>\n            <table>\n                <thead>\n                <tr>{headers}<th>Remove</th></tr>\n                </thead>\n                <tbody>{profileRows}</tbody>\n            </table>\n            <h2>Add Profile:</h2>\n            <form className=\"pure-form pure-form-aligned\" onSubmit={addProfile}>\n                {formContent}\n                <button type=\"submit\" className=\"pure-button pure-button-primary\">\n                Add Profile\n                </button>\n                \n            </form>\n        </div>\n    );\n}\n\nexport default Roster;\n"]},"metadata":{},"sourceType":"module"}