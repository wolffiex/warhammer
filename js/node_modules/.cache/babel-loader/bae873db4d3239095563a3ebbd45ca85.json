{"ast":null,"code":"var _jsxFileName = \"/Users/adam/dev/warhammer/src/App.js\";\nimport React, { useState } from 'react';\nimport sample_figure from './figure.jpg';\nimport './App.css';\nimport MultiSelect from \"react-multi-select-component\";\n\nfunction Name(props) {\n  const [name, setName] = useLocalStorage(props.storageKey, \"Enter Name\");\n\n  const change = event => setName(event.target.value);\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    className: \"team-name\",\n    id: \"teamname\",\n    name: \"teamname\",\n    value: name,\n    onChange: change,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  });\n}\n\nconst Weapons = () => {\n  const options = [{\n    label: \"Grapes 🍇\",\n    value: \"grapes\"\n  }, {\n    label: \"Mango 🥭\",\n    value: \"mango\"\n  }, {\n    label: \"Watermelon 🍉\",\n    value: \"watermelon\"\n  }, {\n    label: \"Pear 🍐\",\n    value: \"pear\"\n  }, {\n    label: \"Apple 🍎\",\n    value: \"apple\"\n  }, {\n    label: \"Tangerine 🍊\",\n    value: \"tangerine\"\n  }, {\n    label: \"Pineapple 🍍\",\n    value: \"pineapple\"\n  }, {\n    label: \"Peach 🍑\",\n    value: \"peach\"\n  }];\n  const [selected, setSelected] = useState([]);\n  return /*#__PURE__*/React.createElement(MultiSelect, {\n    options: options,\n    value: selected,\n    onChange: setSelected,\n    labelledBy: \"Select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  });\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Name, {\n    storageKey: \"teamName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Roster\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pure-g\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pure-u-1-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: sample_figure,\n    className: \".pure-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pure-u-1-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Name, {\n    storageKey: \"characterName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"role\",\n    id: \"role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"volvo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Commando\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"audi\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Sniper\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Weapons:\"), /*#__PURE__*/React.createElement(Weapons, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })))));\n}\n\nexport default App; // Hook\n\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key); // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  }); // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value; // Save state\n\n      setStoredValue(valueToStore); // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}","map":{"version":3,"sources":["/Users/adam/dev/warhammer/src/App.js"],"names":["React","useState","sample_figure","MultiSelect","Name","props","name","setName","useLocalStorage","storageKey","change","event","target","value","Weapons","options","label","selected","setSelected","App","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","console","log","setValue","valueToStore","Function","setItem","stringify"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport sample_figure from './figure.jpg';\nimport './App.css';\nimport MultiSelect from \"react-multi-select-component\";\n\n\nfunction Name(props) {\n    const [name, setName] = useLocalStorage(props.storageKey, \"Enter Name\");\n    const change = (event) => setName(event.target.value)\n    return (\n        <input className=\"team-name\" id=\"teamname\" name=\"teamname\" value={name} onChange={change}/>\n    );\n}\nconst Weapons = () => {\n  const options = [\n    { label: \"Grapes 🍇\", value: \"grapes\" },\n    { label: \"Mango 🥭\", value: \"mango\" },\n    { label: \"Watermelon 🍉\", value: \"watermelon\" },\n    { label: \"Pear 🍐\", value: \"pear\" },\n    { label: \"Apple 🍎\", value: \"apple\" },\n    { label: \"Tangerine 🍊\", value: \"tangerine\" },\n    { label: \"Pineapple 🍍\", value: \"pineapple\" },\n    { label: \"Peach 🍑\", value: \"peach\" },\n  ];\n \n  const [selected, setSelected] = useState([]);\n \n  return (\n    <MultiSelect\n    options={options}\n    value={selected}\n    onChange={setSelected}\n    labelledBy={\"Select\"}\n    />\n  );\n}\n\nfunction App() {\n    return (\n        <div className=\"container\">\n        <header><Name storageKey=\"teamName\" /></header>\n        <div>\n        <h2>Roster</h2>\n        <div className=\"pure-g\">\n            <div className=\"pure-u-1-2\">\n                <img src={sample_figure} className=\".pure-img\"/>\n            </div>\n            <div className=\"pure-u-1-2\">\n                <Name storageKey=\"characterName\" />\n                <div>\n                <select name=\"role\" id=\"role\">\n                    <option value=\"volvo\">Commando</option>\n                    <option value=\"audi\">Sniper</option>\n                </select>\n                </div>\n                <label>\n                    Weapons:\n                </label>\n                <Weapons />\n            </div>\n        </div>\n        </div>\n        </div>\n    );\n}\n\nexport default App;\n\n// Hook\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\n"]},"metadata":{},"sourceType":"module"}