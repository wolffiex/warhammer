{"ast":null,"code":"var _jsxFileName = \"/Users/adam/dev/warhammer/js/src/Profiles.js\";\nimport React from 'react';\nconst attributes = [{\n  'desc': \"Name\",\n  'type': 'text',\n  key: \"Name\"\n}, {\n  'desc': \"Move\",\n  'type': 'number',\n  key: \"M\"\n}, {\n  'desc': \"Weapon Skill\",\n  'type': 'number',\n  key: \"WS\"\n}, {\n  'desc': \"Balistic Skill\",\n  'type': 'number',\n  key: \"BS\"\n}, {\n  'desc': \"Strength\",\n  'type': 'number',\n  key: \"S\"\n}, {\n  'desc': \"Toughness\",\n  'type': 'number',\n  key: \"T\"\n}, {\n  'desc': \"Wounds\",\n  'type': 'number',\n  key: \"W\"\n}, {\n  'desc': \"Attacks\",\n  'type': 'number',\n  key: \"A\"\n}, {\n  'desc': \"Leadership\",\n  'type': 'number',\n  key: \"Ld\"\n}, {\n  'desc': \"Save\",\n  'type': 'number',\n  key: \"Sv\"\n}];\n\nfunction Roster(props) {\n  const getInputID = a => 'input-id-' + a.key;\n\n  const addProfile = event => {\n    const els = event.target.elements;\n    const vals = attributes.reduce((acc, a) => {\n      return { ...acc,\n        [a.key]: els[getInputID(a)].value\n      };\n    }, {});\n    console.log(vals);\n    props.addProfile(vals);\n    event.preventDefault();\n    event.target.reset();\n    return false;\n  };\n\n  const headers = attributes.map(a => /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 42\n    }\n  }, a.desc));\n  const formContent = attributes.map(a => {\n    const id = getInputID(a);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pure-control-group\",\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, a.desc), /*#__PURE__*/React.createElement(\"input\", {\n      type: a.type,\n      id: id,\n      name: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, headers)), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, props.profiles.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 45\n    }\n  }, attributes.map(a => /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 46\n    }\n  }, p[a.key == null ? '-' : a.key])))))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Add Profile:\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"pure-form pure-form-aligned\",\n    onSubmit: addProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, formContent, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"pure-button pure-button-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Add Profile\")));\n}\n\nexport default Roster;","map":{"version":3,"sources":["/Users/adam/dev/warhammer/js/src/Profiles.js"],"names":["React","attributes","key","Roster","props","getInputID","a","addProfile","event","els","target","elements","vals","reduce","acc","value","console","log","preventDefault","reset","headers","map","desc","formContent","id","type","profiles","p"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst attributes = [\n    {'desc': \"Name\", 'type': 'text', key:\"Name\"},\n    {'desc': \"Move\", 'type': 'number', key:\"M\"},\n    {'desc': \"Weapon Skill\", 'type': 'number', key:\"WS\"},\n    {'desc': \"Balistic Skill\", 'type': 'number', key:\"BS\"},\n    {'desc': \"Strength\", 'type': 'number', key:\"S\"},\n    {'desc': \"Toughness\", 'type': 'number', key:\"T\"},\n    {'desc': \"Wounds\", 'type': 'number', key:\"W\"},\n    {'desc': \"Attacks\", 'type': 'number', key:\"A\"},\n    {'desc': \"Leadership\", 'type': 'number', key:\"Ld\"},\n    {'desc': \"Save\", 'type': 'number', key:\"Sv\"},\n];\n\n\nfunction Roster(props) {\n    const getInputID= a => 'input-id-' + a.key;\n    const addProfile = (event) => {\n        const els = event.target.elements\n        const vals = attributes.reduce((acc, a) => {\n            return { ...acc, [a.key]: els[getInputID(a)].value};\n        }, {})\n        console.log(vals)\n        props.addProfile(vals);\n        event.preventDefault();\n        event.target.reset();\n        return false;\n    }\n    const headers = attributes.map( a => <th>{a.desc}</th>);\n    const formContent = attributes.map( a => {\n        const id = getInputID(a);\n        return (\n            <div className=\"pure-control-group\" key={id}>\n                <label htmlFor={id}>{a.desc}</label>\n                <input type={a.type} id={id} name={id}/>\n            </div>\n        );\n    })\n    return (\n        <div>\n            <table>\n                <thead>\n                <tr>{headers}</tr>\n                </thead>\n                <tbody>{\n                    props.profiles.map(p => <tr>{\n                        attributes.map( a => <td>{p[a.key == null ? '-' : a.key]}</td> )\n                    }</tr>)\n                }</tbody>\n            </table>\n            <h2>Add Profile:</h2>\n            <form className=\"pure-form pure-form-aligned\" onSubmit={addProfile}>\n                {formContent}\n                <button type=\"submit\" className=\"pure-button pure-button-primary\">\n                Add Profile\n                </button>\n                \n            </form>\n        </div>\n    );\n}\n\nexport default Roster;\n"]},"metadata":{},"sourceType":"module"}